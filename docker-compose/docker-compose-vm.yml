version: '3.9'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  postgres:
    image: postgres:14.3
    networks:
      - kafka-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"

  zookeeper:
    image: zookeeper:3.8.0
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    depends_on:
      - postgres

  kafka:
    image: obsidiandynamics/kafka
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  eureka:
    image: ilshat1415/eureka-server:0.1
    networks:
      - kafka-net
    environment:
      PORT: "8761"
    ports:
      - "8761:8761"

  gateway-proxy:
    image: ilshat1415/gateway-proxy:0.1
    networks:
      - kafka-net
    environment:
      PORT: "8080"
      EUREKA_HOST: http://eureka:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - eureka

  app1:
    image: ilshat1415/jenkins-images:0.4
#    build:
#      context: ./
#      dockerfile: Dockerfile
    networks:
      - kafka-net
    environment:
      PORT: "8081"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres/postgres"
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_HOST: http://eureka:8761/eureka/
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512m
          cpus: '0.50'
    depends_on:
      - postgres
      - kafka
      - eureka

volumes:
  db-data:
